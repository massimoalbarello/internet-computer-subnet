load("@rules_rust//rust:defs.bzl", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/config",
    "//rs/crypto/sha",
    "//rs/interfaces",
    "//rs/nns/init",
    "//rs/prep",
    "//rs/protobuf",
    "//rs/registry/client",
    "//rs/registry/helpers",
    "//rs/registry/provisional_whitelist",
    "//rs/registry/subnet_features",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/replica",
    "//rs/rust_canisters/canister_test",
    "//rs/test_utilities/identity",
    "//rs/types/base_types",
    "//rs/types/types",
    "//rs/utils",
    "@crate_index//:anyhow",
    "@crate_index//:bincode",
    "@crate_index//:chrono",
    "@crate_index//:crossbeam-channel",
    "@crate_index//:either",
    "@crate_index//:flate2",
    "@crate_index//:fs_extra",
    "@crate_index//:futures",
    "@crate_index//:hex",
    "@crate_index//:humantime",
    "@crate_index//:ic-agent",
    "@crate_index//:lazy_static",
    "@crate_index//:libc",
    "@crate_index//:mio",
    "@crate_index//:nix",
    "@crate_index//:nonblock",
    "@crate_index//:pico-args",
    "@crate_index//:rand_0_8_4",
    "@crate_index//:rand_chacha_0_3_1",
    "@crate_index//:regex",
    "@crate_index//:reqwest",
    "@crate_index//:retain_mut",
    "@crate_index//:serde",
    "@crate_index//:serde_cbor",
    "@crate_index//:serde_json",
    "@crate_index//:serde_millis",
    "@crate_index//:signal-hook",
    "@crate_index//:signal-hook-mio",
    "@crate_index//:slog",
    "@crate_index//:slog-async",
    "@crate_index//:slog-term",
    "@crate_index//:ssh2",
    "@crate_index//:tempfile",
    "@crate_index//:thiserror",
    "@crate_index//:tokio",
    "@crate_index//:url",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = [
    "//rs/test_utilities",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "ic_fondue",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_fondue",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    version = "0.8.0",
    deps = DEPENDENCIES,
)

rust_test(
    name = "ic_fondue_test",
    aliases = ALIASES,
    crate = ":ic_fondue",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_doc_test(
    name = "ic_fondue_doc_test",
    crate = ":ic_fondue",
)
