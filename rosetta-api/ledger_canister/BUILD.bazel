load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("//bazel:prost.bzl", "generated_files_check")
load("//bazel:canisters.bzl", "optimized_canister", "rust_canister")
load("//bazel:candid.bzl", "did_git_test")
load("@rules_motoko//motoko:defs.bzl", "motoko_binary", "motoko_library")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "protos",
    srcs = glob(["proto/**"]),
)

DEPENDENCIES = [
    "//rs/constants",
    "//rs/crypto/sha",
    "//rs/monitoring/metrics_encoder",
    "//rs/nns/constants",
    "//rs/protobuf",
    "//rs/phantom_newtype",
    "//rs/rosetta-api/ledger_canister_core",
    "//rs/rosetta-api/ledger_core",
    "//rs/rust_canisters/dfn_candid",
    "//rs/rust_canisters/dfn_core",
    "//rs/rust_canisters/dfn_http",
    "//rs/rust_canisters/dfn_http_metrics",
    "//rs/rust_canisters/dfn_protobuf",
    "//rs/rust_canisters/on_wire",
    "//rs/types/base_types",
    "//rs/types/ic00_types",
    "//rs/utils",
    "@crate_index//:byteorder",
    "@crate_index//:candid",
    "@crate_index//:ciborium",
    "@crate_index//:comparable",
    "@crate_index//:crc32fast",
    "@crate_index//:digest",
    "@crate_index//:hex",
    "@crate_index//:intmap",
    "@crate_index//:lazy_static",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:serde_bytes",
    "@crate_index//:serde_cbor",
]

MACRO_DEPENDENCIES = [
    "@crate_index//:async-trait",
    "@crate_index//:prost-derive",
]

DEV_DEPENDENCIES = [
    "//rs/rust_canisters/canister_test",
    "//rs/canister_client/sender",
    "//rs/test_utilities/compare_dirs",
    "//rs/rosetta-api/ledger_canister/protobuf_generator:lib",
    "@crate_index//:rand_0_8_4",
    "@crate_index//:rand_chacha_0_3_1",
    "@crate_index//:tempfile",
]

rust_library(
    name = "ledger_canister",
    srcs = glob([
        "src/**",
        "gen/**",
    ]),
    crate_name = "ledger_canister",
    data = [
        "wasm/ledger-archive-node-canister-bazel.wasm",
    ],
    proc_macro_deps = MACRO_DEPENDENCIES,
    rustc_env = {
        # Circular dependency between ledger-canister-wasm and ledger_canister.
        # Tracked in https://dfinity.atlassian.net/browse/ROSETTA1-299
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "../wasm/ledger-archive-node-canister-bazel.wasm",
    },
    version = "0.8.0",
    deps = DEPENDENCIES,
)

motoko_library(
    name = "ledger_mo_lib",
    srcs = ["wasm/Ledger.mo"],
)

motoko_binary(
    name = "ledger_proxy",
    entry = "wasm/Proxy.mo",
    deps = [":ledger_mo_lib"],
)

rust_library(
    name = "ledger_canister_test_feature",
    srcs = glob([
        "src/**",
        "gen/**",
    ]),
    crate_name = "ledger_canister",
    data = [
        "wasm/ledger-archive-node-canister-bazel.wasm",
    ],
    proc_macro_deps = MACRO_DEPENDENCIES,
    rustc_env = {
        # Circular dependency between ledger-canister-wasm and ledger_canister.
        # Tracked in https://dfinity.atlassian.net/browse/ROSETTA1-299
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "../wasm/ledger-archive-node-canister-bazel.wasm",
    },
    deps = DEPENDENCIES,
)

rust_test(
    name = "test_notified_test",
    srcs = ["test/notified.rs"],
    deps = DEPENDENCIES + DEV_DEPENDENCIES + [":ledger_canister"],
)

rust_canister(
    name = "test_notified_canister",
    srcs = ["test/notified.rs"],
    deps = [
        ":ledger_canister",
    ] + DEPENDENCIES,
)

rust_test(
    name = "ledger_canister_test",
    crate = ":ledger_canister",
    data = [
        "wasm/ledger-archive-node-canister-bazel.wasm",
    ],
    rustc_env = {
        # Circular dependency between ledger-canister-wasm and ledger_canister.
        # Tracked in https://dfinity.atlassian.net/browse/ROSETTA1-299
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "../wasm/ledger-archive-node-canister-bazel.wasm",
    },
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_test(
    name = "ledger_canister_integration_test",
    srcs = ["test/test.rs"],
    data = [
        "ledger.did",
        "ledger_archive.did",
        "wasm/ledger-archive-node-canister-bazel.wasm",
        "wasm/ledger_proxy.wasm",
        ":ledger-canister-wasm",
        ":ledger-canister-wasm-notify-method",
        ":test_notified_canister",
        "//rs/canister_sandbox",
        "//rs/canister_sandbox/sandbox_launcher",
    ],
    env = {
        "CARGO_MANIFEST_DIR": "rs/rosetta-api/ledger_canister",
        "LEDGER_CANISTER_WASM_PATH": "$(rootpath :ledger-canister-wasm)",
        "LEDGER_CANISTER_NOTIFY_METHOD_WASM_PATH": "$(rootpath :ledger-canister-wasm-notify-method)",
        "TEST_NOTIFIED_WASM_PATH": "$(rootpath :test_notified_canister)",
        "LAUNCHER_BINARY": "$(rootpath //rs/canister_sandbox/sandbox_launcher)",
        "SANDBOX_BINARY": "$(rootpath //rs/canister_sandbox)",
    },
    rustc_env = {
        # Circular dependency between ledger-canister-wasm and ledger_canister.
        # Tracked in https://dfinity.atlassian.net/browse/ROSETTA1-299
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "../wasm/ledger-archive-node-canister-bazel.wasm",
    },
    deps = DEPENDENCIES + DEV_DEPENDENCIES + [":ledger_canister"],
)

rust_canister(
    name = "ledger-canister-wasm-raw",
    srcs = ["src/main.rs"],
    data = [
        "ledger.did",
    ],
    deps = [
        ":ledger_canister",
    ] + DEPENDENCIES,
)

optimized_canister(
    name = "ledger-canister-wasm",
    wasm = "ledger-canister-wasm-raw",
)

rust_test(
    name = "ledger_canister_unit_test",
    crate = ":_wasm_ledger-canister-wasm-raw",
    data = [
        ":ledger.did",
    ],
    env = {
        "CARGO_MANIFEST_DIR": "rs/rosetta-api/ledger_canister",
    },
)

did_git_test(
    name = "ledger_did_git_test",
    did = ":ledger.did",
)

rust_canister(
    name = "ledger-canister-wasm-notify-method-raw",
    srcs = ["src/main.rs"],
    crate_features = ["notify-method"],
    data = [
        "ledger.did",
    ],
    deps = [
        ":ledger_canister",
    ] + DEPENDENCIES,
)

optimized_canister(
    name = "ledger-canister-wasm-notify-method",
    wasm = "ledger-canister-wasm-notify-method-raw",
)

rust_canister(
    name = "ledger-archive-node-canister-wasm-raw",
    srcs = ["src/archive_node.rs"],
    data = [
        "ledger_archive.did",
    ],
    deps = [
        ":ledger_canister",
    ] + DEPENDENCIES,
)

optimized_canister(
    name = "ledger-archive-node-canister-wasm",
    wasm = "ledger-archive-node-canister-wasm-raw",
)

rust_test(
    name = "ledger-archive-node_test",
    srcs = ["src/archive_node.rs"],
    data = [
        "ledger_archive.did",
    ],
    rustc_env = {
        "CARGO_MANIFEST_DIR": "rs/rosetta-api/ledger_canister",
    },
    deps = [":ledger_canister"] + DEPENDENCIES,
)

generated_files_check(
    name = "check_generated_files",
    srcs = ["test/check_generated_files.rs"],
    data = [
        ":protos",
        "//rs/types/base_types:protos",
    ] + glob(["gen/**"]),
    manifest_dir = "rs/rosetta-api/ledger_canister",
    deps = [
        "//rs/rosetta-api/ledger_canister/protobuf_generator:lib",
        "//rs/test_utilities/compare_dirs",
        "@crate_index//:tempfile",
    ],
)
